#!/bin/sh

# Developer:  🆁🅾🅱🅴🆁🆃🅾  🅲🅰🅻🅰🅱🆁🅴🆂🅴
# City:       🅿🅰🅻🅴🆁🅼🅾, 🆂🅸🅲🅸🅻🆈
# Country:    🅸🆃🅰🅻🆈

# Note:  Builds for APPLE SILICON cpus (M1, M2, M3) are fully supported starting from Tcl 8.7.b1.
#        Status for APPLE SILICON builds in MacOS Ventura and Sonoma:
#          - Tcl 8.7.b1 compiles and everything works as expected.
#          - Tcl 8.7.a5 compiles, but only 'tclkit8.7-cli' works as expected while 'tclkit8.7-gui'
#                       crashes every time Tk is loaded.
#          - Tcl 8.6.13 and belows, does not compile at all.
#
# Note:  Builds for INTEL cpus should work as expected.
#        I do not own a Mac with INTEL cpu to properly test it.
#        If there is any problem, please let me know (robertocalabrese75@gmail.com).

# Set the number of cores to use for the build.
#
# Note:  Modify this value accordingly to your needs.
NUMJOBS="8"

# Set the build folder.
#
# Note:  Modify this path accordingly to your needs.
#
# Note:  The tclkits generated by the script will be located at:
#            "$OUTROOTDIR/Darwin/x64/Release/Distribution/opt/Tcl/bin" for 64 bit system
#            "$OUTROOTDIR/Darwin/x86/Release/Distribution/opt/Tcl/bin" for 32 bit system
OUTROOTDIR="build"

# Set the tcl or tclkit path.
#
# Note:  The tcl version shipped by Apple is too outdated to run Bawt, you need 8.6.6 or later.
#        You can install 'tcl' trough Homebrew or Macports:
#           Homebrew --> brew install tcl-tk
#           Macports --> port install tcl
#
# Note:  Modify this path accordingly with your tcl or tclkit location.

# Macports users.
TCLSH="/opt/local/bin/tclsh"

# Homebrew users on apple silicon cpus.
#TCLSH="/opt/homebrew/bin/tclsh"

# Homebrew users on intel cpus.
#TCLSH="/usr/local/bin/tclsh"

# Check the architecture type on the current build system.
ARCH=`uname -m`
if [[ "${ARCH}" == "x86_64" || "${ARCH}" == "amd64" || "${ARCH}" == "arm64" || "${ARCH}" == "aarch64" ]]; then
    ARCH="x64"
else
    ARCH="x86"
fi

# Check the tcl version to use.
if [ "$1" == "" ]; then
    echo
    echo "Usage: ./macos.sh TclTk"
    echo
    echo "  Where:"
    echo
    echo "    TclTk:  8.6.6  --> Tcl/Tk 8.6.6"
    echo "            8.6.7  --> Tcl/Tk 8.6.7"
    echo "            8.6.8  --> Tcl/Tk 8.6.8"
    echo "            8.6.9  --> Tcl/Tk 8.6.9"
    echo "            8.6.10 --> Tcl/Tk 8.6.10"
    echo "            8.6.11 --> Tcl/Tk 8.6.11"
    echo "            8.6.12 --> Tcl/Tk 8.6.12"
    echo "            8.6.13 --> Tcl/Tk 8.6.13"
    echo "            8.7.a5 --> Tcl/Tk 8.7.a5"
    echo "            8.7.b1 --> Tcl/Tk 8.7.b1"
    echo
    echo "Examples:"
    echo
    echo "  ./macos.sh 8.6.6  --> Will create tclkits that includes Tcl 8.6.6  (with and without Tk 8.6.6)"
    echo "  ./macos.sh 8.6.7  --> Will create tclkits that includes Tcl 8.6.7  (with and without Tk 8.6.7)"
    echo "  ..."
    echo "  ./macos.sh 8.7.a5 --> Will create tclkits that includes Tcl 8.7.a5 (with and without Tk 8.7.a5)"
    echo "  ./macos.sh 8.7.b1 --> Will create tclkits that includes Tcl 8.7.b1 (with and without Tk 8.7.b1)"
    echo
    echo "Note:  Only Tcl/Tk versions 8.7.b1 or later are supported for Apple Silicon cpus (M1, M2, M3)."
    echo
    echo "Note:  The tclkits architecture will be the same of the operative system in which it was build."
    echo "       If the operative system is at 64 bits, then the tclkits builded in it will be at 64 bits,"
    echo "       if it's at 32 bits, then the tclkits builded in it will be at 32 bits."
    exit 0
else
    TCL_VERSION="$1"
fi

# Consume the variable '$1'.
shift

# Build all libraries as listed in the setup file provided.
BAWTOPTS="--rootdir ${OUTROOTDIR} \
          --architecture ${ARCH} \
          --numjobs ${NUMJOBS} \
          --tclversion ${TCL_VERSION} \
          --tkversion ${TCL_VERSION}"

# Build all libraries as listed in the setup file provided.
${TCLSH} assets/Bawt.tcl ${BAWTOPTS} --update assets/setup/tclkit1.0.bawt all

exit 0
