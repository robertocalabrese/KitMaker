@echo off
setlocal

rem Developer:  🆁🅾🅱🅴🆁🆃🅾  🅲🅰🅻🅰🅱🆁🅴🆂🅴
rem City:       🅿🅰🅻🅴🆁🅼🅾, 🆂🅸🅲🅸🅻🆈
rem Country:    🅸🆃🅰🅻🆈

rem Set the number of cores to use for the build.
rem
rem Note:  Modify this value accordingly to your needs.
set NUMJOBS=%NUMBER_OF_PROCESSORS%

rem Set the build folder.
rem
rem Note:  The tclkits generated by the script will be located at:
rem            "$OUTROOTDIR/Windows/x64/Release/Distribution/opt/Tcl/bin" for 64 bit systems
rem            "$OUTROOTDIR/Windows/x86/Release/Distribution/opt/Tcl/bin" for 32 bit systems
rem
rem Note:  Modify this path accordingly to your needs.
set OUTROOTDIR="build"

rem Check if the build system have an ARM processor, if not, assume INTEL/AMD.
if "%PROCESSOR_ARCHITECTURE%"=="ARM64" (
    set CPU="-arm"
) else if "%PROCESSOR_ARCHITECTURE%"=="ARM32" (
    set CPU="-arm"
) else if "%PROCESSOR_ARCHITECTURE%"=="ARM" (
    set CPU="-arm"
) else (
    set CPU=""
)

rem Check the architecture provided.
if "%1"=="x64" (
    set ARCH="x64"
) else if "%1"=="x86" (
    set ARCH="x86"
) else (
    goto HELP
)

rem Check the tcl version provided.
if "%2" == "" (
    goto HELP
) else (
    set TCL_VERSION=%2
)

rem Consume the variables '%1' and '%2'.
shift
shift

rem Build all libraries as listed in the setup file 'assets/setup/tclkit1.0.bawt'.
set BAWTOPTS=--rootdir %OUTROOTDIR% ^
             --architecture %ARCH% ^
             --compiler gcc ^
             --numjobs %NUMJOBS% ^
             --gccversion 7.2.0 ^
             --tclversion %TCL_VERSION% ^
             --tkversion %TCL_VERSION%

set TCLKIT="assets/windows/tclkit-cli%CPU%-%ARCH%.exe"

CALL %TCLKIT% assets/Bawt.tcl %BAWTOPTS% --update assets/setup/tclkit1.0.bawt all

goto EOF

rem Display the help.
:HELP
echo.
echo Usage: ./windows.bat Architecture TclTk
echo.
echo   Where:
echo.
echo     Architecture: x64 --> 64 bit (only available for Microsoft Windows versions at 64 bits)
echo                   x86 --> 32 bit
echo.
echo     TclTk:        8.6.6  --> Tcl/Tk 8.6.6
echo                   8.6.7  --> Tcl/Tk 8.6.7
echo                   8.6.8  --> Tcl/Tk 8.6.8
echo                   8.6.9  --> Tcl/Tk 8.6.9
echo                   8.6.10 --> Tcl/Tk 8.6.10
echo                   8.6.11 --> Tcl/Tk 8.6.11
echo                   8.6.12 --> Tcl/Tk 8.6.12
echo                   8.6.13 --> Tcl/Tk 8.6.13
echo                   8.7.a5 --> Tcl/Tk 8.7.a5
echo                   8.7.b1 --> Tcl/Tk 8.7.b1
echo.
echo Examples:
echo.
echo   ./windows.bat x86 8.6.6  --> Will create tclkits at 32 bits that includes Tcl 8.6.6  (with and without Tk 8.6.6)
echo   ./windows.bat x64 8.6.6  --> Will create tclkits at 64 bits that includes Tcl 8.6.6  (with and without Tk 8.6.6)
echo.
echo   ./windows.bat x86 8.6.7  --> Will create tclkits at 32 bits that includes Tcl 8.6.7  (with and without Tk 8.6.7)
echo   ./windows.bat x64 8.6.7  --> Will create tclkits at 64 bits that includes Tcl 8.6.7  (with and without Tk 8.6.7)
echo.
echo   ...
echo.
echo   ./windows.bat x86 8.7.a5 --> Will create tclkits at 32 bits that includes Tcl 8.7.a5 (with and without Tk 8.7.a5)
echo   ./windows.bat x64 8.7.a5 --> Will create tclkits at 64 bits that includes Tcl 8.7.a5 (with and without Tk 8.7.a5)
echo.
echo   ./windows.bat x86 8.7.b1 --> Will create tclkits at 32 bits that includes Tcl 8.7.b1 (with and without Tk 8.7.b1)
echo   ./windows.bat x64 8.7.b1 --> Will create tclkits at 64 bits that includes Tcl 8.7.b1 (with and without Tk 8.7.b1)
:EOF